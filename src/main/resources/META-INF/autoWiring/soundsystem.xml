<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--Assuming each class that has to become a bean is annotated with a correct annotation like @Component (for simple bean)-->
 <!--or @Controller (for a servlet control) or @Repository (for DAO classes) and these classes are somewhere under the-->
 <!--package com.mycompany.movies, Spring will find all of these and create a bean for each one. This is done in 2 scans of-->
 <!--the classes - the first time it just searches for classes that need to become a bean and maps the injections it needs-->
 <!--to be doing, and on the second scan it injects the beans. Of course, you can define your beans in the more traditional-->
 <!--XML file or with a @Configuration class (or any combination of the three).-->
    <context:component-scan base-package="com.springCore.autoWiring"/>

</beans>
